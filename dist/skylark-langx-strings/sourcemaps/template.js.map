{"version":3,"sources":["template.js"],"names":["define","strings","template","id","data","name","string","line","body","func","map","escapeHTML","me","arguments","callee","cache","test","get","variable","replace","Function","&","<",">","\"","'","_","stash","call","context","ret","document","getElementById","innerHTML"],"mappings":";;;;;;;AAAAA,QACC,aACC,SAASC,GAKP,SAASC,EAAUC,EAAIC,GA0BnB,IAEQC,EAAWC,EACXC,EAAUC,EAgBVC,EACAC,EACAC,EArBJC,EAAKC,UAAUC,OAwBnB,OAvBKF,EAAGG,MAAMZ,KAAKS,EAAGG,MAAMZ,IACpBE,EAAOF,EAAIG,EAAS,YAAYU,KAAKb,GAAMS,EAAGK,IAAId,IAAME,EAAO,mBAAoBF,GACnFI,EAAO,EAAGC,GACV,UACKI,EAAGM,SAAY,OAASN,EAAGM,SAAW,iBAAmB,wBACtD,gBACAZ,EACIa,QAAQ,MAAO,KAAQA,QAAQ,MAAO,KACtCA,QAAQ,0BAA2B,SACnCA,QAAQ,aAAc,IACtBA,QAAQ,WAAY,WAAc,MAAO,sBAAwBZ,EAAQ,uBACzEY,QAAQ,qBAAsB,gBAC9BA,QAAQ,kBAAmB,+BAC3BA,QAAQ,iBAAkB,wBAClC,OAASP,EAAGM,SAAW,GAAK,KAAO,qEACgBb,EAAO,mDAC3CA,EAAO,MAC5Bc,QAAQ,qBAAsB,IAC5BV,EAAO,IAAIW,SAASZ,GACpBE,GAASW,IAAM,QAASC,IAAM,OAAQC,IAAM,OAAQC,IAAS,SAAUC,IAAS,UAChFd,EAAa,SAAUL,GAAU,OAAQ,GAAGA,GAAQa,QAAQ,aAAc,SAAUO,GAAK,OAAOhB,EAAIgB,MACjG,SAAUC,GAAS,OAAOlB,EAAKmB,KAAKhB,EAAGiB,SAAYlB,WAAYA,EAAYJ,KAAM,EAAGuB,IAAM,GAAIH,MAAOA,OAEzGvB,EAAOQ,EAAGG,MAAMZ,GAAIC,GAAQQ,EAAGG,MAAMZ,GAWnD,OARGD,EAASa,SAGTb,EAASe,IAAM,SAAUd,GACrB,OAAO4B,SAASC,eAAe7B,GAAI8B,WAInChC,EAAQC,SAAWA","file":"../template.js","sourcesContent":["define([\r\n\t\"./strings\"\r\n],function(strings){\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n\t\r\n\treturn strings.template = template;\r\n});"]}